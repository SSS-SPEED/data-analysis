
String：

name = 'Swaroop'
if name.startswith('Swa'):       是否以Swa开头
if 'a' in name:                  是否含有a
name.find('war') != -1:          是否包含war
name[1:3]                        输出wa
name[:]                          输出Swaroop

delimiter = '_*_'
mylist = ['Brazil', 'Russia', 'India', 'China']
print (delimiter.join(mylist))                         在每个元素前后都插入_*_
输出：Brazil_*_Russia_*_India_*_China



数组：

shoplist = ['apple', 'mango', 'carrot', 'banana']

shoplist[-1]               输出banana，-1代表最后一位
shoplist.append('rice')    增加
del shoplist[0]            删除
shoplist.sort()            排序

mylist = shoplist          不要这样复制，会跟随shoplist变化
mylist = shoplist[:]       这样复制



元祖：
zoo = ('wolf', 'elephant', 'penguin')     元祖内部的值无法改动

age = 22
name = 'Swaroop'
print ('%s is %d years old' %(name, age)) 使用元祖输出


字典：
ab={'键1':'值1',           标准写法
    '键2':'值2',
    '键3':'值3',}

print ('输出键2的值为%s' %(ab['键2']))     标准输出
ab['键4']='值4'                            添加一组键值对
del ab['键1']                              删除对应的键值对
for name, address in ab.items():           键值对的轮询
    print(name,'的值是',address)
if '键2' in ab:                            查询是否含有指定键值对
    print(ab['键2'])


为数字内大于2的值，增加一倍
listone = [2, 3, 4]
listtwo = [2*i for i in listone if i > 2]
print (listtwo)



























